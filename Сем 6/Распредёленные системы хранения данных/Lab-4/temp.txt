# Cohq
root@147.45.40.78 # pg1
***********

# 500
root@87.120.36.97 # pg2
***********


echo "147.45.40.78 pg1" | sudo tee -a /etc/hosts
echo "87.120.36.97 pg2" | sudo tee -a /etc/hosts


pg1:
listen_addresses = '*'
wal_level = replica
max_wal_senders = 10
wal_keep_size = 256
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
hot_standby = on

pg2:
listen_addresses = '*'
host    all             all             0.0.0.0/0               md5


sudo mkdir -p /var/lib/postgresql/archive
sudo chown postgres:postgres /var/lib/postgresql/archive
sudo systemctl restart postgresql
sudo systemctl status postgresql

CREATE ROLE replicator WITH REPLICATION LOGIN PASSWORD 'replpass';
CREATE ROLE labuser    WITH LOGIN PASSWORD 'labpass';
CREATE DATABASE labdb  OWNER labuser;

# Доступ клиентам
host    labdb        labuser     0.0.0.0/0          md5

# Потоковая репликация с pg2
host    replication  replicator  87.120.36.97/32      md5

pg2:

sudo systemctl stop postgresql

sudo -u postgres rm -rf /var/lib/postgresql/16/main/*

sudo -u postgres pg_basebackup -h pg1 -D /var/lib/postgresql/16/main -U replicator -Fp -Xs -P -R -C -S pg2_slot


root@vm1049477:/var/lib/postgresql/16/main# cat postgresql.auto.conf
# Do not edit this file manually!
# It will be overwritten by the ALTER SYSTEM command.
primary_conninfo = 'user=replicator password=replpass channel_binding=prefer host=pg1 port=5432 sslmode=prefer sslnegotiation=postgres sslcompression=0 sslcertmode=allow sslsni=1 ssl_min_protocol_version=TLSv1.2 gssencmode=prefer krbsrvname=postgres gssdelegation=0 target_session_attrs=any load_balance_hosts=disable'
primary_slot_name = 'pg2_slot'

sudo systemctl restart postgresql


pg1:

postgres=# SELECT client_addr,
       state,
       sync_state,
       write_lag, flush_lag, replay_lag
FROM   pg_stat_replication;
 client_addr  |   state   | sync_state | write_lag | flush_lag | replay_lag
--------------+-----------+------------+-----------+-----------+------------
 87.120.36.97 | streaming | async      |           |           |
(1 row)


pg2:

postgres=# SELECT pg_is_in_recovery();   -- true
 pg_is_in_recovery
-------------------
 t
(1 row)




pg1:

/etc/pgbouncer/pgbouncer.ini ->

[databases]
labdb = host=147.45.40.78,87.120.36.97 port=5432 dbname=labdb

[pgbouncer]
listen_addr        = 0.0.0.0
listen_port        = 6432
auth_type          = md5
auth_file          = /etc/pgbouncer/userlist.txt
pool_mode          = transaction
server_round_robin = 1          ; равномерно раскидывать коннекты


/etc/pgbouncer/userlist.txt ->

"labuser" "labpass"


sudo systemctl enable --now pgbouncer
